#!/usr/bin/env bash
set -eo pipefail

if [ "${EUID}" -ne 0 ]; then
    echo "Please run as root"
    exit 1
fi

while true; do
    read -p "Are you sure you want to wipe all partitions? " awnser

    case ${awnser} in
        [Yy]*)
            break
            ;;
        [Nn]*)
            exit
            ;;
        *)
            echo "Please answer yes or no!"
            ;;
    esac
done

echo "----> Remove previous VGs"
for VG in $(vgs --noheadings 2>/dev/null | sed -e 's/^[[:space:]]*//' | cut -d" " -f 1); do
    vgremove -y ${VG} 2>/dev/null
done

echo "----> Remove previous PVs"
for PV in $(pvs --noheadings 2>/dev/null | sed -e 's/^[[:space:]]*//' | cut -d" " -f 1); do
    pvremove -y ${PV} 2>/dev/null
done

echo "----> Drop existing partitions"
sgdisk --zap-all /dev/disk/by-path/pci-0000:00:1f.2-ata-1.0
sgdisk -og /dev/disk/by-path/pci-0000:00:1f.2-ata-1.0
sgdisk --zap-all /dev/disk/by-path/pci-0000:00:1f.2-ata-2.0
sgdisk -og /dev/disk/by-path/pci-0000:00:1f.2-ata-2.0
# sgdisk --zap-all /dev/disk/by-path/pci-0000:00:1f.2-ata-3.0
# sgdisk -og /dev/disk/by-path/pci-0000:00:1f.2-ata-3.0
# sgdisk --zap-all /dev/disk/by-path/pci-0000:00:1f.2-ata-4.0
# sgdisk -og /dev/disk/by-path/pci-0000:00:1f.2-ata-4.0

echo "-----> Wait for cleanup"
sleep 3
sync

echo "-----> Create sda partitions"
parted -a opt --script /dev/disk/by-path/pci-0000:00:1f.2-ata-1.0 \
    mklabel gpt \
    mkpart non-fs 0 2 \
    mkpart primary 2 100% \
    set 1 bios_grub on \
    set 2 lvm on \
    name 2 tank1

echo "-----> Create sdb partitions"
parted -a opt --script /dev/disk/by-path/pci-0000:00:1f.2-ata-2.0 \
    mklabel gpt \
    mkpart non-fs 0 2 \
    mkpart primary 2 100% \
    set 1 bios_grub on \
    set 2 lvm on \
    name 2 tank2

echo "-----> Create raid1 volume"
echo yes | mdadm --create /dev/md0 --level=1 --raid-devices=2 /dev/disk/by-partlabel/tank1 /dev/disk/by-partlabel/tank2

# echo "-----> Create sdc partitions"
# parted -a opt --script /dev/disk/by-path/pci-0000:00:1f.2-ata-3.0 \
#     mklabel gpt \
#     mkpart primary 0 2 \
#     mkpart primary 2 100% \
#     set 1 bios_grub on \
#     set 2 lvm on \
#     name 2 tank3

# echo "-----> Create sdd partitions"
# parted -a opt --script /dev/disk/by-path/pci-0000:00:1f.2-ata-4.0 \
#     mklabel gpt \
#     mkpart primary 0 2 \
#     mkpart primary 2 100% \
#     set 1 bios_grub on \
#     set 2 lvm on \
#     name 2 tank4

# echo "-----> Create raid2 volume"
# echo yes | mdadm --create /dev/md0 --level=1 --raid-devices=2 /dev/disk/by-partlabel/tank3 /dev/disk/by-partlabel/tank4

echo "-----> Wait for partitions"
sleep 3
sync

echo "-----> Create data pv"
pvcreate /dev/md0 # /dev/md1

echo "-----> Create data vg"
vgcreate system /dev/md0 # /dev/md1

echo "-----> Create swap volume"
lvcreate -y --size $(cat /proc/meminfo | grep MemTotal | cut -d':' -f2 | sed 's/ //g') --name swap system

echo "-----> Create root volume"
lvcreate -y --size 1G --name root system

echo "-----> Create nix volume"
lvcreate -y --size 50G --name nix system

echo "-----> Create home volume"
lvcreate -y --size 1G --name home system

echo "-----> Create boot volume"
lvcreate -y --size 1G --name boot system

echo "-----> Enable swap partition"
mkswap -L swap /dev/system/swap
swapon /dev/system/swap

echo "-----> Create root filesystem"
mkfs.ext4 -L root /dev/system/root

echo "-----> Mount root filesystem"
mkdir -p /mnt
mount -t ext4 /dev/system/root /mnt

echo "-----> Create nix filesystem"
mkfs.ext4 -L nix /dev/system/nix

echo "-----> Mount nix filesystem"
mkdir -p /mnt/nix
mount -t ext4 /dev/system/nix /mnt/nix

echo "-----> Create home filesystem"
mkfs.ext4 -L home /dev/system/home

echo "-----> Mount home filesystem"
mkdir -p /mnt/home
mount -t ext4 /dev/system/home /mnt/home

echo "-----> Create boot filesystem"
mkfs.vfat -F32 -n boot /dev/system/boot

echo "-----> Mount boot filesystem"
mkdir -p /mnt/boot
mount /dev/system/boot /mnt/boot
